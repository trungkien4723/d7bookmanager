<?php

/**
 * Implements hook_menu().
 */
function book_menu()
{
  $item = array();

  $item['api/v1/books'] = array(
    'page callback' => 'process_book_request',
    'access callback' => TRUE,
  );

  $item['api/v1/books/%'] = array(
    'page callback' => 'process_book_request',
    'page arguments' => array(3),
    'access callback' => TRUE,
  );

  return $item;
}

/**
 * process functions by method
 */
function process_book_request($nid)
{
  switch (strtoupper($_SERVER['REQUEST_METHOD']))
  {
    case 'GET':
      if($nid) book_index($nid);
      else book_all();
    break;
    case 'POST':
      if(isset($nid)) book_update($nid);
      else book_create();
    break;
    case 'DELETE':
      book_delete($nid);
    break;
  }
}

/**
 * selecting a book by nid
 */
function book_index($args)
{
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'book')
    ->propertyCondition('status', 1)
    ->propertyCondition('nid', $args);
  $result = $query->execute();
  if (isset($result['node'])) {
    $items_nids = array_keys($result['node']);
    $items = entity_load('node', $items_nids);
    drupal_json_output($items);
  }
}

/**
 * selecting all books
 */
function book_all()
{
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'book')
    ->range(0, 4)
    ->propertyCondition('status', 1);

  $result = $query->execute();
  if (isset($result['node'])) {
    $items_nids = array_keys($result['node']);
    $items = entity_load('node', $items_nids);
    drupal_json_output($items);
  }
}

/**
 * create a book
 */
function book_create()
{
  $node = new stdClass();
  $node->type = 'book';
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;
  $node->status = 1;
  $node->promote = 0;
  $node->comment = 2;
  $node->title = 'test create book';

  $description = "this is a test description";
  $node->field_description[$node->language][]['value'] = $description;

  $node->field_categories[$node->language][]['tid'] = 2;
  $node->field_author[$node->language][]['tid'] = 1;
  $node->	field_publisher[$node->language][]['tid'] = 4;
  $node->field_published_year[$node->language][]['tid'] = 7;
  $node = node_submit($node);
  node_save($node);
  drupal_json_output($node);
}

/**
 * edit infomations of a book
 */
function book_update($nid)
{
  $node = node_load($nid);
  node_object_prepare($node);

  $node->title = 'test create book';

  $description = "this is a edited test description";
  $node->field_description[$node->language][0]['value'] = $description;

  $node->field_categories[$node->language][0]['tid'] = 2;
  $node->field_author[$node->language][0]['tid'] = 5;
  $node->	field_publisher[$node->language][0]['tid'] = 4;
  $node->field_published_year[$node->language][0]['tid'] = 7;
  $node = node_submit($node);
  node_save($node);
  drupal_json_output($node);
}

/**
 * delete a book
 */
function book_delete($nid)
{
  node_delete($nid);
}
